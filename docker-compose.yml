volumes:
  bb_local_postgres_data: {}
  bb_local_postgres_data_backups: {}

services:
  db:
    image: postgres:16.3
    volumes:
      - bb_local_postgres_data:/var/lib/postgresql/data
      - bb_local_postgres_data_backups:/backups
    environment:
      - POSTGRES_DB=bb_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  # TODO STACK: Switch with Redis?
  rabbitmq:
    image: "rabbitmq:alpine"

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  django:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/bb_db
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
      - mailpit
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: celery -A bb.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/bb_db
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
      - mailpit
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: celery -A bb.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/bb_db
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
      - mailpit
    restart: on-failure

  mailpit:
    image: docker.io/axllent/mailpit:latest
    ports:
      - "8025:8025"
      # - "1025:1025"
